//////////////////////////////////////////////////////////////////////
//	File Name	:	"CRectObstacle.h"
//
//	Author Name	:	Preston Stoll
// 
//	Purpose		:	To hold all related data and 
//					functionality for a four sided polygon for collision
//////////////////////////////////////////////////////////////////////
#pragma once
#include "SGD_Math.h"
#include "CBase.h"

struct CollisionData
{
	bool hadCollision;		// Whether or not a collision occured
	float resultAngle;		// If one did occur, the new angle for the colliding object
};

class CRectObstacle : public CBase
{
private:
	// The four points that make up this rect
	tVector2D	m_v2DPoints[4];
public:
	CRectObstacle();

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function: “Render”
	//
	// Purpose: Renders the object onscreen
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void Render();
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function: “Update”
	//
	// Purpose: Updates the object using the elapsed time
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void Update(float fElapsedTime);

	///////////////////////////////////////////////
	//	Function:	Accessors
	//
	//	Purpose:	To get the specified type.
	///////////////////////////////////////////////
	tVector2D GetPoint(int _nPoint) { return m_v2DPoints[_nPoint]; }
	///////////////////////////////////////////////
	//	Function:	Modifiers
	//
	//	Purpose:	To set the specified type
	///////////////////////////////////////////////
	void SetPoint(int _nPoint, tVector2D _v2DPoint) { m_v2DPoints[_nPoint] = _v2DPoint; }
	void SetAll(float _0x, float _0y, float _1x, float _1y, float _2x, float _2y, float _3x, float _3y)
	{
		m_v2DPoints[0].fX = _0x;	m_v2DPoints[0].fY = _0y;
		m_v2DPoints[1].fX = _1x;	m_v2DPoints[1].fY = _1y;
		m_v2DPoints[2].fX = _2x;	m_v2DPoints[2].fY = _2y;
		m_v2DPoints[3].fX = _3x;	m_v2DPoints[3].fY = _3y;
	}
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Function: “CheckCollision”
	//
	// Purpose: Returns true if a collision was detected with the passed in object
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	bool CheckCollision(CBase* pBase, bool _act = true);
};